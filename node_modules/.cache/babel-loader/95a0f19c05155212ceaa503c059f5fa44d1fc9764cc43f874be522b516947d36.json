{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/Books/Books.js\";\nimport React, { useState } from \"react\";\nimport { Typography, Grid, Card, CardContent, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = ({\n  books\n}) => {\n  //   const [sortBy, setSortBy] = useState(\"none\");\n  //   const [filteredBooks, setFilteredBooks] = useState(books);\n\n  //   const handleSortByChange = (event) => {\n  //     const selectedValue = event.target.value;\n  //     setSortBy(selectedValue);\n\n  //     if (selectedValue === \"none\") {\n  //       setFilteredBooks(books);\n  //     } else if (selectedValue === \"genre\") {\n  //       const sortedBooks = [...books].sort((a, b) =>\n  //         a.volumeInfo.categories[0].localeCompare(b.volumeInfo.categories[0])\n  //       );\n  //       setFilteredBooks(sortedBooks);\n  //     } else if (selectedValue === \"author\") {\n  //       const sortedBooks = [...books].sort((a, b) =>\n  //         a.volumeInfo.authors[0].localeCompare(b.volumeInfo.authors[0])\n  //       );\n  //       setFilteredBooks(sortedBooks);\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","Typography","Grid","Card","CardContent","FormControl","InputLabel","Select","MenuItem","jsxDEV","_jsxDEV","BookList","books","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/Books/Books.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nconst BookList = ({ books }) => {\n  //   const [sortBy, setSortBy] = useState(\"none\");\n  //   const [filteredBooks, setFilteredBooks] = useState(books);\n\n  //   const handleSortByChange = (event) => {\n  //     const selectedValue = event.target.value;\n  //     setSortBy(selectedValue);\n\n  //     if (selectedValue === \"none\") {\n  //       setFilteredBooks(books);\n  //     } else if (selectedValue === \"genre\") {\n  //       const sortedBooks = [...books].sort((a, b) =>\n  //         a.volumeInfo.categories[0].localeCompare(b.volumeInfo.categories[0])\n  //       );\n  //       setFilteredBooks(sortedBooks);\n  //     } else if (selectedValue === \"author\") {\n  //       const sortedBooks = [...books].sort((a, b) =>\n  //         a.volumeInfo.authors[0].localeCompare(b.volumeInfo.authors[0])\n  //       );\n  //       setFilteredBooks(sortedBooks);\n  //     }\n  //   };\n\n  return (\n    <div>\n      {/* <Typography variant=\"h4\" gutterBottom>\n        Bookstore\n      </Typography>\n      <FormControl variant=\"outlined\" style={{ marginBottom: \"20px\" }}>\n        <InputLabel>Sort By</InputLabel>\n        <Select value={sortBy} onChange={handleSortByChange} label=\"Sort By\">\n          <MenuItem value=\"none\">None</MenuItem>\n          <MenuItem value=\"genre\">Genre</MenuItem>\n          <MenuItem value=\"author\">Author</MenuItem>\n        </Select>\n      </FormControl>\n      <Grid container spacing={3}>\n        {filteredBooks.map((book) => (\n          <Grid item xs={12} sm={6} md={4} lg={3} key={book.id}>\n            <Card variant=\"outlined\">\n              <CardContent>\n                <img\n                  src={book.volumeInfo.imageLinks.thumbnail}\n                  alt={book.volumeInfo.title}\n                />\n                <Typography variant=\"h6\" component=\"div\">\n                  {book.volumeInfo.title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Author: {book.volumeInfo.authors[0]}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Genre: {book.volumeInfo.categories[0]}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid> */}\n    </div>\n  );\n};\n\nexport default BookList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,QACH,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC9B;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEF,OAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAmCK,CAAC;AAEV,CAAC;AAACC,EAAA,GA7DIN,QAAQ;AA+Dd,eAAeA,QAAQ;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}