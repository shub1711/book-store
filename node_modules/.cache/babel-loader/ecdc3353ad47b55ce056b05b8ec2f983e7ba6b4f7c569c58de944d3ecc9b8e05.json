{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/cart/AddToCart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = ({\n  cartItems,\n  removeFromCart\n}) => {\n  _s();\n  // Use the useEffect hook to load cart data from localStorage when the component mounts\n  useEffect(() => {\n    const cartData = localStorage.getItem(\"cart\");\n    if (cartData) {\n      const parsedCartData = JSON.parse(cartData);\n      console.log(\"Koca: parsedCartData \", parsedCartData);\n      // Update the cartItems with the data from localStorage\n      // This is useful if the user revisits the cart page, and you want to display the saved cart items\n      // You can also add more logic here if needed\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"140\",\n        image: item.volumeInfo.imageLinks.smallThumbnail,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: item.volumeInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          children: [\"PRICE: \\u20B9\", item.saleInfo.listPrice.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          variant: \"contained\",\n          onClick: () => removeFromCart(index),\n          children: \"Remove from Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useEffect","Card","CardContent","CardMedia","Typography","Button","jsxDEV","_jsxDEV","Cart","cartItems","removeFromCart","_s","cartData","localStorage","getItem","parsedCartData","JSON","parse","console","log","children","map","item","index","component","height","image","volumeInfo","imageLinks","smallThumbnail","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","title","color","saleInfo","listPrice","amount","size","onClick","_c","$RefreshReg$"],"sources":["/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/cart/AddToCart.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nconst Cart = ({ cartItems, removeFromCart }) => {\n  // Use the useEffect hook to load cart data from localStorage when the component mounts\n  useEffect(() => {\n    const cartData = localStorage.getItem(\"cart\");\n    if (cartData) {\n      const parsedCartData = JSON.parse(cartData);\n      console.log(\"Koca: parsedCartData \", parsedCartData);\n      // Update the cartItems with the data from localStorage\n      // This is useful if the user revisits the cart page, and you want to display the saved cart items\n      // You can also add more logic here if needed\n    }\n  }, []);\n\n  return (\n    <div>\n      {cartItems.map((item, index) => (\n        <Card key={index}>\n          <CardMedia\n            component=\"img\"\n            height=\"140\"\n            image={item.volumeInfo.imageLinks.smallThumbnail}\n            alt=\"\"\n          />\n          <CardContent>\n            <Typography variant=\"h6\" component=\"div\">\n              {item.volumeInfo.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              PRICE: &#8377;{item.saleInfo.listPrice.amount}\n            </Typography>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              onClick={() => removeFromCart(index)}\n            >\n              Remove from Cart\n            </Button>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default Cart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC9C;EACAX,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,QAAQ,EAAE;MACZ,MAAMG,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;MAC3CM,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,cAAc,CAAC;MACpD;MACA;MACA;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAa,QAAA,EACGX,SAAS,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBhB,OAAA,CAACN,IAAI;MAAAmB,QAAA,gBACHb,OAAA,CAACJ,SAAS;QACRqB,SAAS,EAAC,KAAK;QACfC,MAAM,EAAC,KAAK;QACZC,KAAK,EAAEJ,IAAI,CAACK,UAAU,CAACC,UAAU,CAACC,cAAe;QACjDC,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACF3B,OAAA,CAACL,WAAW;QAAAkB,QAAA,gBACVb,OAAA,CAACH,UAAU;UAAC+B,OAAO,EAAC,IAAI;UAACX,SAAS,EAAC,KAAK;UAAAJ,QAAA,EACrCE,IAAI,CAACK,UAAU,CAACS;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACb3B,OAAA,CAACH,UAAU;UAAC+B,OAAO,EAAC,WAAW;UAACE,KAAK,EAAC,eAAe;UAAAjB,QAAA,GAAC,eACtC,EAACE,IAAI,CAACgB,QAAQ,CAACC,SAAS,CAACC,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACb3B,OAAA,CAACF,MAAM;UACLoC,IAAI,EAAC,OAAO;UACZN,OAAO,EAAC,WAAW;UACnBO,OAAO,EAAEA,CAAA,KAAMhC,cAAc,CAACa,KAAK,CAAE;UAAAH,QAAA,EACtC;QAED;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,GArBLX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsBV,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1CIH,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}