{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/Books/Books.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Grid, Card, CardContent, FormControl, InputLabel, Select, MenuItem, List, ListItem, ListItemText, Box } from \"@mui/material\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { useBookContext } from \"../../BookContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const {\n    bookData\n  } = useBookContext();\n  console.log(\"Koca: Book list bookData \", bookData);\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const authorNames = bookData.map(book => book.volumeInfo.authors[0]);\n  const handleAuthorChange = event => {\n    const author = event.target.value;\n    setSelectedAuthor(author);\n    const filteredBooks = bookData.filter(book => book.volumeInfo.authors[0] === author);\n    setFilteredBooks(filteredBooks);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        marginRight: \"20px\",\n        paddingTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Select Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedAuthor,\n          onChange: handleAuthorChange,\n          label: \"Select Author\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"All Authors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), authorNames.map((author, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: author,\n            children: author\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: filteredBooks.length > 0 ? filteredBooks.map((book, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            style: {\n              border: \"1px solid #ccc\",\n              margin: \"5px\",\n              padding: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: book.volumeInfo.title,\n                src: book.volumeInfo.imageLinks.smallThumbnail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: book.volumeInfo.title,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: \"inline\"\n                  },\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: book.volumeInfo.authors[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this), \" \", book.volumeInfo.subtitle]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No books found for the selected author.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"WsmoNXselhVDSKNhysF4pzg2Lv8=\", false, function () {\n  return [useBookContext];\n});\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Card","CardContent","FormControl","InputLabel","Select","MenuItem","List","ListItem","ListItemText","Box","ListItemAvatar","Avatar","useBookContext","jsxDEV","_jsxDEV","BookList","_s","bookData","console","log","selectedAuthor","setSelectedAuthor","filteredBooks","setFilteredBooks","authorNames","map","book","volumeInfo","authors","handleAuthorChange","event","author","target","value","filter","style","display","children","marginRight","paddingTop","variant","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","index","length","border","margin","padding","alt","title","src","imageLinks","smallThumbnail","primary","secondary","Fragment","sx","component","color","subtitle","_c","$RefreshReg$"],"sources":["/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/Books/Books.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Box,\n} from \"@mui/material\";\n\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\n\nimport { useBookContext } from \"../../BookContext\";\n\nconst BookList = () => {\n  const { bookData } = useBookContext();\n  console.log(\"Koca: Book list bookData \", bookData);\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\n  const [filteredBooks, setFilteredBooks] = useState([]);\n\n  const authorNames = bookData.map((book) => book.volumeInfo.authors[0]);\n\n  const handleAuthorChange = (event) => {\n    const author = event.target.value;\n    setSelectedAuthor(author);\n    const filteredBooks = bookData.filter(\n      (book) => book.volumeInfo.authors[0] === author\n    );\n    setFilteredBooks(filteredBooks);\n  };\n\n  return (\n    <Box style={{ display: \"flex\" }}>\n      <Box style={{ marginRight: \"20px\", paddingTop: \"20px\" }}>\n        <FormControl variant=\"outlined\" style={{ marginBottom: \"20px\" }}>\n          <InputLabel>Select Author</InputLabel>\n          <Select\n            value={selectedAuthor}\n            onChange={handleAuthorChange}\n            label=\"Select Author\"\n          >\n            <MenuItem value=\"\">\n              <em>All Authors</em>\n            </MenuItem>\n            {authorNames.map((author, index) => (\n              <MenuItem key={index} value={author}>\n                {author}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n      <Box>\n        <Box>\n          <List>\n            {filteredBooks.length > 0 ? (\n              filteredBooks.map((book, index) => (\n                <ListItem\n                  key={index}\n                  style={{\n                    border: \"1px solid #ccc\",\n                    margin: \"5px\",\n                    padding: \"10px\",\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar\n                      alt={book.volumeInfo.title}\n                      src={book.volumeInfo.imageLinks.smallThumbnail}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={book.volumeInfo.title}\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          sx={{ display: \"inline\" }}\n                          component=\"span\"\n                          variant=\"body2\"\n                          color=\"text.primary\"\n                        >\n                          {book.volumeInfo.authors[0]}\n                        </Typography>{\" \"}\n                        {book.volumeInfo.subtitle}\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n              ))\n            ) : (\n              <p>No books found for the selected author.</p>\n            )}\n          </List>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BookList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}