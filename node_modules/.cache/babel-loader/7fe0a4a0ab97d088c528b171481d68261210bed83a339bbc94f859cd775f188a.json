{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/Books/Books.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Grid, Card, CardContent, FormControl, InputLabel, Select, MenuItem, List, ListItem, ListItemText, Box } from \"@mui/material\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport useGoogleBooks from \"../useGoogleBooks\"; // Adjust the path to your custom hook file\nimport { useBookContext } from \"../../BookContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  //   const { bookData } = useBookContext();\n  const bookData = useGoogleBooks();\n  console.log(\"Koca: Book list bookData \", bookData);\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const authorNames = bookData && Array.isArray(bookData) ? bookData.map(book => book.volumeInfo && book.volumeInfo.authors && book.volumeInfo.authors[0]) : [];\n  console.log(\"Koca: authorNames \", authorNames);\n  const handleAuthorChange = event => {\n    const author = event.target.value;\n    setSelectedAuthor(author);\n    const filteredBooks = bookData.filter(book => book.volumeInfo.authors[0] === author);\n    setFilteredBooks(filteredBooks);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      display: \"flex\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"gH7ME0Hbujab02nxuF4sFGVAJzI=\", false, function () {\n  return [useGoogleBooks];\n});\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Card","CardContent","FormControl","InputLabel","Select","MenuItem","List","ListItem","ListItemText","Box","ListItemAvatar","Avatar","useGoogleBooks","useBookContext","jsxDEV","_jsxDEV","BookList","_s","bookData","console","log","selectedAuthor","setSelectedAuthor","filteredBooks","setFilteredBooks","authorNames","Array","isArray","map","book","volumeInfo","authors","handleAuthorChange","event","author","target","value","filter","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/Books/Books.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Box,\n} from \"@mui/material\";\n\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport useGoogleBooks from \"../useGoogleBooks\"; // Adjust the path to your custom hook file\nimport { useBookContext } from \"../../BookContext\";\n\nconst BookList = () => {\n  //   const { bookData } = useBookContext();\n  const bookData = useGoogleBooks();\n  console.log(\"Koca: Book list bookData \", bookData);\n  const [selectedAuthor, setSelectedAuthor] = useState(\"\");\n  const [filteredBooks, setFilteredBooks] = useState([]);\n\n  const authorNames =\n    bookData && Array.isArray(bookData)\n      ? bookData.map(\n          (book) =>\n            book.volumeInfo &&\n            book.volumeInfo.authors &&\n            book.volumeInfo.authors[0]\n        )\n      : [];\n  console.log(\"Koca: authorNames \", authorNames);\n\n  const handleAuthorChange = (event) => {\n    const author = event.target.value;\n    setSelectedAuthor(author);\n    const filteredBooks = bookData.filter(\n      (book) => book.volumeInfo.authors[0] === author\n    );\n    setFilteredBooks(filteredBooks);\n  };\n\n  return (\n    <Box style={{ display: \"flex\" }}>\n      {/* <Box style={{ marginRight: \"20px\", paddingTop: \"20px\" }}>\n        <FormControl variant=\"outlined\" style={{ marginBottom: \"20px\" }}>\n          <InputLabel>Select Author</InputLabel>\n          <Select\n            value={selectedAuthor}\n            onChange={handleAuthorChange}\n            label=\"Select Author\"\n          >\n            <MenuItem value=\"\">\n              <em>All Authors</em>\n            </MenuItem>\n            {authorNames.map((author, index) => (\n              <MenuItem key={index} value={author}>\n                {author}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n      <Box>\n        <Box>\n          <List>\n            {filteredBooks.length > 0 ? (\n              filteredBooks.map((book, index) => (\n                <ListItem\n                  key={index}\n                  style={{\n                    border: \"1px solid #ccc\",\n                    margin: \"5px\",\n                    padding: \"10px\",\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Avatar\n                      alt={book.volumeInfo.title}\n                      src={book.volumeInfo.imageLinks.smallThumbnail}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={book.volumeInfo.title}\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          sx={{ display: \"inline\" }}\n                          component=\"span\"\n                          variant=\"body2\"\n                          color=\"text.primary\"\n                        >\n                          {book.volumeInfo.authors[0]}\n                        </Typography>{\" \"}\n                        {book.volumeInfo.subtitle}\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n              ))\n            ) : (\n              <p>No books found for the selected author.</p>\n            )}\n          </List>\n        </Box>\n      </Box> */}\n    </Box>\n  );\n};\n\nexport default BookList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,GAAG,QACE,eAAe;AAEtB,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,cAAc,MAAM,mBAAmB,CAAC,CAAC;AAChD,SAASC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAMC,QAAQ,GAAGN,cAAc,CAAC,CAAC;EACjCO,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAAC;EAClD,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM6B,WAAW,GACfP,QAAQ,IAAIQ,KAAK,CAACC,OAAO,CAACT,QAAQ,CAAC,GAC/BA,QAAQ,CAACU,GAAG,CACTC,IAAI,IACHA,IAAI,CAACC,UAAU,IACfD,IAAI,CAACC,UAAU,CAACC,OAAO,IACvBF,IAAI,CAACC,UAAU,CAACC,OAAO,CAAC,CAAC,CAC7B,CAAC,GACD,EAAE;EACRZ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,WAAW,CAAC;EAE9C,MAAMO,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACjCd,iBAAiB,CAACY,MAAM,CAAC;IACzB,MAAMX,aAAa,GAAGL,QAAQ,CAACmB,MAAM,CAClCR,IAAI,IAAKA,IAAI,CAACC,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,KAAKG,MAC3C,CAAC;IACDV,gBAAgB,CAACD,aAAa,CAAC;EACjC,CAAC;EAED,oBACER,OAAA,CAACN,GAAG;IAAC6B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA+D3B,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA7FID,QAAQ;EAAA,QAEKJ,cAAc;AAAA;AAAAgC,EAAA,GAF3B5B,QAAQ;AA+Fd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}