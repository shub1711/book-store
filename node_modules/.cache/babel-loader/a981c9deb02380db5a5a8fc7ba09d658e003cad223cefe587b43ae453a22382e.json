{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/Author/AuthorList.js\",\n  _s = $RefreshSig$();\n// AuthorList.js\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardContent, Typography } from \"@mui/material\";\nimport useGoogleBooks from \"../useGoogleBooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authors = [\"David M. Beazley\"]; // Replace with your list of authors\n\nconst AuthorList = () => {\n  _s();\n  const bookData = useGoogleBooks();\n  const authorNames = bookData && Array.isArray(bookData) && bookData.map(book => book.volumeInfo && book.volumeInfo.authors && book.volumeInfo.authors[0]);\n  const authorCounts = {};\n  for (const book of bookData) {\n    const authors = book.volumeInfo.authors;\n    if (authors) {\n      // Iterate through authors of the current book\n      for (const author of authors) {\n        // Increment the count for the author or initialize it to 1\n        authorCounts[author] = (authorCounts[author] || 0) + 1;\n      }\n    }\n  }\n  for (const author in authorCounts) {\n    console.log(`${author} has written ${authorCounts[author]} books.`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: authorNames.map((author, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        margin: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/author/${author}`,\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthorList, \"kRvT7HyTprSMB96eZFca5cZ4cfA=\", false, function () {\n  return [useGoogleBooks];\n});\n_c = AuthorList;\nexport default AuthorList;\nvar _c;\n$RefreshReg$(_c, \"AuthorList\");","map":{"version":3,"names":["React","Link","Card","CardContent","Typography","useGoogleBooks","jsxDEV","_jsxDEV","authors","AuthorList","_s","bookData","authorNames","Array","isArray","map","book","volumeInfo","authorCounts","author","console","log","children","index","style","margin","variant","component","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shubhamsrivastav/Desktop/OpenBook-main/src/Components/Author/AuthorList.js"],"sourcesContent":["// AuthorList.js\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardContent, Typography } from \"@mui/material\";\nimport useGoogleBooks from \"../useGoogleBooks\";\n\nconst authors = [\"David M. Beazley\"]; // Replace with your list of authors\n\nconst AuthorList = () => {\n  const bookData = useGoogleBooks();\n\n  const authorNames =\n    bookData &&\n    Array.isArray(bookData) &&\n    bookData.map(\n      (book) =>\n        book.volumeInfo && book.volumeInfo.authors && book.volumeInfo.authors[0]\n    );\n\n  const authorCounts = {};\n\n  for (const book of bookData) {\n    const authors = book.volumeInfo.authors;\n\n    if (authors) {\n      // Iterate through authors of the current book\n      for (const author of authors) {\n        // Increment the count for the author or initialize it to 1\n        authorCounts[author] = (authorCounts[author] || 0) + 1;\n      }\n    }\n  }\n\n  for (const author in authorCounts) {\n    console.log(`${author} has written ${authorCounts[author]} books.`);\n  }\n  return (\n    <div>\n      {authorNames.map((author, index) => (\n        <Card key={index} style={{ margin: \"10px\" }}>\n          <CardContent>\n            <Typography variant=\"h6\" component=\"div\">\n              <Link to={`/author/${author}`}>{author}</Link>\n            </Typography>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default AuthorList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC7D,OAAOC,cAAc,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,cAAc,CAAC,CAAC;EAEjC,MAAMO,WAAW,GACfD,QAAQ,IACRE,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,IACvBA,QAAQ,CAACI,GAAG,CACTC,IAAI,IACHA,IAAI,CAACC,UAAU,IAAID,IAAI,CAACC,UAAU,CAACT,OAAO,IAAIQ,IAAI,CAACC,UAAU,CAACT,OAAO,CAAC,CAAC,CAC3E,CAAC;EAEH,MAAMU,YAAY,GAAG,CAAC,CAAC;EAEvB,KAAK,MAAMF,IAAI,IAAIL,QAAQ,EAAE;IAC3B,MAAMH,OAAO,GAAGQ,IAAI,CAACC,UAAU,CAACT,OAAO;IAEvC,IAAIA,OAAO,EAAE;MACX;MACA,KAAK,MAAMW,MAAM,IAAIX,OAAO,EAAE;QAC5B;QACAU,YAAY,CAACC,MAAM,CAAC,GAAG,CAACD,YAAY,CAACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;MACxD;IACF;EACF;EAEA,KAAK,MAAMA,MAAM,IAAID,YAAY,EAAE;IACjCE,OAAO,CAACC,GAAG,CAAE,GAAEF,MAAO,gBAAeD,YAAY,CAACC,MAAM,CAAE,SAAQ,CAAC;EACrE;EACA,oBACEZ,OAAA;IAAAe,QAAA,EACGV,WAAW,CAACG,GAAG,CAAC,CAACI,MAAM,EAAEI,KAAK,kBAC7BhB,OAAA,CAACL,IAAI;MAAasB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAH,QAAA,eAC1Cf,OAAA,CAACJ,WAAW;QAAAmB,QAAA,eACVf,OAAA,CAACH,UAAU;UAACsB,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,KAAK;UAAAL,QAAA,eACtCf,OAAA,CAACN,IAAI;YAAC2B,EAAE,EAAG,WAAUT,MAAO,EAAE;YAAAG,QAAA,EAAEH;UAAM;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC,GALLT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCID,UAAU;EAAA,QACGJ,cAAc;AAAA;AAAA4B,EAAA,GAD3BxB,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}